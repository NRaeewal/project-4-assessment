{"version":3,"sources":["components/CircleSelector/CircleSelector.jsx","components/Circles/Circles.jsx","App.js","reportWebVitals.js","index.js"],"names":["CircleSelector","props","click","e","buttonChosenHandler","target","value","className","console","log","buttonChosen","circleSelected","onClick","Circles","App","circleSelectedHandler","setState","state","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAuCeA,EAlCO,SAAEC,GAExB,IAAMC,EAAQ,SAAAC,GACVF,EAAMG,oBAAoBD,EAAEE,OAAOC,QAKnC,OAEI,sBAAKC,UAAU,iBAAf,UACCC,QAAQC,IAAIR,EAAMS,cAGf,wBAAQH,UAAqC,MAAzBN,EAAMU,eAAyB,WAAa,GAChEL,MAAO,IACPM,QAASV,EAFT,6BAGA,wBAAQK,UAAqC,MAAzBN,EAAMU,eAAyB,WAAa,GAChEL,MAAO,IACPM,QAASV,EAFT,6BAGA,wBAAQK,UAAqC,MAAzBN,EAAMU,eAAyB,WAAa,GAChEL,MAAO,IAEPM,QAASV,EAHT,6BAIA,wBAAQK,UAAqC,MAAzBN,EAAMU,eAAyB,WAAa,GAChEL,MAAO,IAEPM,QAASV,EAHT,iCCVGW,G,MAfC,SAACZ,GAGb,OACA,sBAAKM,UAAU,UAAf,UACI,qBAAKA,UAAkC,MAAvBN,EAAMS,aAAuB,WAAa,GAA1D,eACA,qBAAKH,UAAkC,MAAvBN,EAAMS,aAAuB,WAAa,GAA1D,eACA,qBAAKH,UAAkC,MAAvBN,EAAMS,aAAuB,WAAa,GAA1D,eACA,qBAAKH,UAAkC,MAAvBN,EAAMS,aAAuB,WAAa,GAA1D,oBCsBOI,E,kDA5Bb,aAAe,IAAD,8BACZ,gBAMJC,sBAAwB,SAACJ,GACvB,EAAKK,SAAS,CAACL,oBANb,EAAKM,MAAQ,CACXN,eAAiB,KAHP,E,0CAYd,WACE,OACE,sBAAKJ,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,qCACA,iCACE,cAAC,EAAD,CACAI,eAAkBO,KAAKD,MAAMN,eAC7BP,oBAAuBc,KAAKH,wBAC5B,cAAC,EAAD,CACAL,aAAgBQ,KAAKD,MAAMN,2B,GAtBnBQ,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.38cffffd.chunk.js","sourcesContent":["import React from 'react';\r\nimport './CircleSelector.css';\r\n\r\n\r\n\r\nconst CircleSelector =( props) => {\r\n\r\nconst click = e => {\r\n    props.buttonChosenHandler(e.target.value)\r\n}\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='CircleSelector'>\r\n        {console.log(props.buttonChosen)}\r\n\r\n  \r\n            <button className= {props.circleSelected === '1' ? 'selected' : ''} \r\n            value= '1'           \r\n            onClick={click}>SELECT CIRCLE 1</button>\r\n            <button className= {props.circleSelected === '2' ? 'selected' : ''}  \r\n            value= '2'           \r\n            onClick={click}>SELECT CIRCLE 2</button>\r\n            <button className= {props.circleSelected === '3' ? 'selected' : ''} \r\n            value= '3'           \r\n           \r\n            onClick={click}>SELECT CIRCLE 3</button>\r\n            <button className= {props.circleSelected === '4' ? 'selected' : ''}     \r\n            value= '4'           \r\n       \r\n            onClick={click}>SELECT CIRCLE 4</button>\r\n\r\n            </div>\r\n)\r\n    \r\n}\r\n\r\nexport default CircleSelector;","import React from 'react';\r\nimport './Circles.css'\r\n\r\n\r\nconst Circles = (props) => {\r\n\r\n    \r\n    return (\r\n    <div className='Circles'>\r\n        <div className={props.buttonChosen === '1' ? 'selected' : ''} >1</div>\r\n        <div className={props.buttonChosen === '2' ? 'selected' : ''} >2</div>\r\n        <div className={props.buttonChosen === '3' ? 'selected' : ''} >3</div>\r\n        <div className={props.buttonChosen === '4' ? 'selected' : ''} >4</div>\r\n\r\n    </div>\r\n)\r\n};\r\n\r\n\r\nexport default Circles; ","import React, { Component } from 'react';\nimport './App.css';\nimport CircleSelector from './components/CircleSelector/CircleSelector'\nimport Circles from './components/Circles/Circles'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      circleSelected : '1'\n    };\n  }\n\ncircleSelectedHandler = (circleSelected) => {\n  this.setState({circleSelected})\n}\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">UNIT 4 FINAL ASSESSMENT</header>\n        <main>\n          <CircleSelector\n          circleSelected = {this.state.circleSelected}\n          buttonChosenHandler = {this.circleSelectedHandler}/>\n          <Circles\n          buttonChosen = {this.state.circleSelected}/>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}